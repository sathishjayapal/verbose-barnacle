
spring:
  datasource:
    url: ${JDBC_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
  docker:
    compose:
      lifecycle-management: start-only
  cloud:
    kubernetes:
      discovery:
        all-namespaces: true
  config:
    import:
      - application-prod.yml

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: "logs/app.log"
    logging.pattern.file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  level:
    org.springframework.web: INFO
    org.hibernate: ERROR
    root: debug

error:
  handling:
    http-status-in-json-response: true
    exception-logging: NO_LOGGING
    full-stacktrace-http-statuses: 5xx
    log-levels:
      5xx: ERROR
    http-statuses:
      org.springframework.security.authorization.AuthorizationDeniedException: unauthorized
    codes:
      RepositoriesRepoNameUnique: REPOSITORIES_REPO_NAME_UNIQUE
management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
server:
  port: ${PORT:7080}

# Eventstracker service configuration
eventstracker:
  url: ${EVENTSTRACKER_URL:http://localhost:9081}
